#!/bin/bash
# Description: display system information on dwm bar
# Dependencies: iw, alsa-utils, mpc, xsetroot
# Shell: Bash
# set -eu -o pipefail

# INIT
echo "$$" > ~/.cache/pidofbar
sec=0
interface="wlan0"

if [ "$(getdevice)" = "Laptop" ]; then
	is_laptop=1
else
	is_laptop=0
fi

update_time() {
	time="$(date "+%b %d - %H:%M")"
}

update_wifi() {
	hash iw || return
	test -d /sys/class/net/$interface || return
	ssid=$(iw $interface link | awk -F': ' '/SSID/ {print $2}')

	read -r state </sys/class/net/$interface/operstate
	if [ "$state" = "down" ]; then
		icon=""
	else
		icon=" "
	fi

	wifi="$(printf "%s%s" "$icon" "$ssid")"
}

update_temp(){
	test -d /sys/class/thermal/thermal_zone1 || return
	if [ "$is_laptop" = 1 ]; then
		read -r temperature </sys/class/thermal/thermal_zone0/temp
	else
		read -r temperature </sys/class/thermal/thermal_zone1/temp
	fi
	temp="$(printf "󰈐 %.2s" "$temperature")"
}

update_bat() {
	test -d /sys/class/power_supply/BAT1 || return
	read -r bat_status </sys/class/power_supply/BAT1/status
	read -r bat_capacity </sys/class/power_supply/BAT1/capacity
	if [ "$bat_status" = "Charging" ]; then
		bat_status="󰂄"
	else 
		bat_status="󰁹"
	fi

	bat="$(printf "%s %s%%" "$bat_status" "$bat_capacity")"
}

update_vol() {
	avol="$(amixer get Master |grep -m1 -o "[0-9]*%")"
	vol_status="$(amixer get Master |grep -cm1 "\[on\]")"

	if [ "$vol_status" = "1" ]; then
		vol="$(printf "󰕾 %s" "$avol")"
	else
		vol="󰖁"
	fi
}

update_mpd() {
	if ! mpc | grep "playing" > /dev/null; then
		mediainfo=""
		return
	fi

	mpc="$(mpc current -f "[%artist% - %title%]")"
	[ -z "$mpc" ] && mediainfo="󰋄 Playing " && return
	mediainfo="$(printf "󰋄 %s " "$mpc")"
}

update_mic() {
	mic_status="$(amixer get Capture |grep -cm1 "\[on\]")"
	if [ "$mic_status" = "1" ]; then
		mic=""
		return
	fi

	mic="  "
}

# We have to run this only once.
update_vol

display() {
	if [ "$is_laptop" = 1 ]; then
		xsetroot -name "${mediainfo:-}${mic:-}$vol $wifi $bat $time"
	else
		xsetroot -name "${mediainfo:-}${mic:-}$vol $time"
	fi
}

# Handles receiving signal
trap   "update_vol; display"    "RTMIN"
trap   "update_mpd; display"    "RTMIN+1"
trap   "update_mic; display"    "RTMIN+2"

while true
do
	sleep 1 &
	wait && {
		# to update item ever n seconds with a offset of m
		[ $((sec % 12 )) -eq 0 ] && update_time
		if [ "$is_laptop" = 1 ]; then
			[ $((sec % 12 )) -eq 0 ] && update_bat
			[ $((sec % 3 )) -eq 0 ] && update_wifi
		fi

		# how often the display updates
		[ $((sec % 3 )) -eq 0 ] && display
		sec=$((sec + 1))
	}
done
